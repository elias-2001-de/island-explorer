{
    "Sprint 1": {
        "Name": "Grundgerüst",
        "Punkte Produkt": 15,
        "User Storys": [
            {
                "Name": "Registrierung",
                "Punktzahl": 4,
                "User Story": "Als User möchte ich mich registrieren können, damit nur ich Zugriff auf meine persönlichen Daten habe.",
                "Akzeptanzkriterien": [
                    "Loginseite enthält einen \"Registrieren\" Button",
                    "Drückt User auf den \"Registrieren\" Button wird User auf eine \"Registrieren\" Seite zum Anlegen eines neuen User Accounts weitergeleitet",
                    "Für angemeldete User ist der \"Registrieren\" Button nicht sichtbar und die \"Registrieren\" Seite nicht erreichbar (Weiterleitung auf Karte)",
                    "\"Registrieren\" Seite enthält Eingabefelder für Vorname, Nachname, Adresse, Email, Passwort und Passwort- Bestätigung und einen \"Registrieren\" Button um die Registrierung durchzuführen",
                    "Eine Registrierung kann nur durchgeführt werden, wenn alle Felder vom User korrekt ausgefüllt wurden (Validierung)",
                    "Eine Registrierung kann nur durchgeführt werden wenn noch kein User Account mit der angegebenen Mail Adresse existiert und das Passwort mindestens 8 Zeichen hat",
                    "Wenn eine Registrierung nicht durchgeführt werden kann bekommt der User Feedback welche Eingaben fehlerhaft sind oder warum eine Registrierung nicht durchgeführt werden kann",
                    "Nach erfolgreicher Registrierung wird der User automatisch angemeldet und auf die Karte weitergeleitet"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Anmelden",
                "Punktzahl": 3,
                "User Story": "Als User möchte ich mich einloggen können, damit ich wieder Zugriff auf meine persönlichen Daten bekomme.",
                "Akzeptanzkriterien": [
                    "Registrierungsseite enthält einen \"Login\" Button",
                    "Drückt User auf den \"Login\" Button wird User auf eine \"Login\" Seite weitergeleitet",
                    "Für angemeldete User ist die \"Login\" Seite nicht erreichbar (Weiterleitung auf Karte)",
                    "\"Login\" Seite enthält Eingabefelder für Mail und Passwort und einen \"Login\" Button um die Anmeldung durchzuführen",
                    "Eine Anmeldung kann nur durchgeführt wenn alle Felder vom User korrekt ausgefüllt wurden (Validierung)",
                    "Eine Anmeldung kann nur durchgeführt wenn ein User mit der Mail Adresse existiert und das Passwort mit dem angegebenen Passwort bei der Registrierung übereinstimmt",
                    "Wenn eine Anmeldung nicht durchgeführt werden kann bekommt der User Feedback welche Eingaben fehlerhaft sind oder warum eine Anmeldung nicht durchgeführt werden kann",
                    "Nach erfolgreicher Anmeldung wird User auf die Karte weitergeleitet"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Abmelden",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich mich abmelden können, damit andere Personen nicht auf meine persönlichen Informationen zugreifen können.",
                "Akzeptanzkriterien": [
                    "Profilseite enthält einen \"Abmelden\" Button",
                    "Drückt User auf den \"Abmelden\" Button wird User abgemeldet und auf die Loginseite weitergeleitet"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Persönliche Informationen",
                "Punktzahl": 4,
                "User Story": "Als User möchte ich meine persönlichen Informationen ändern können, damit ich meine Informationen anpassen kann die ich bei der Registrierung angegeben habe.",
                "Akzeptanzkriterien": [
                    "\"Mein Profil\" Seite enthält \"Bearbeiten\" Buttons",
                    "Drückt User auf den \"Bearbeiten\" Button kann er/sie die persönlichen Informationen auf einer separaten Seite mithilfe von Eingabefeldern ändern und mit einem \"Speichern\" Button speichern",
                    "Die Mail Adresse kann nicht geändert werden",
                    "Die Eingabefelder sind mit den bisherigen persönlichen Informationen ausgefüllt",
                    "Das Eingabefeld für das Passwort ist nicht ausgefüllt",
                    "Für das Passwort existiert ein weiteres Eingabefeld für die Passwort- Bestätigung",
                    "Die persönlichen Informationen können nur gespeichert werden, wenn alle Felder vom User korrekt ausgefüllt wurden (Validierung)",
                    "Die Bearbeitung von persönlichen Informationen des Profils kann durch Drücken auf einen \"Abbrechen\" Button abgebrochen werden",
                    "Bei Speicherung oder Abbruch der Bearbeitung von persönlichen Informationen wird der User auf die \"Mein Profil\" Seite zurückgeleitet"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Über uns",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich Informationen über die Webseitenbetreiber ansehen können, damit ich mehr über die Personen hinter der Webseite erfahre.",
                "Akzeptanzkriterien": [
                    "Webseite enthält einen \"Über uns\" Link",
                    "Drückt User auf den \"Über uns\" Link kommt er/sie zu der \"Über uns\" Seiten der Gruppe",
                    "Die \"Über uns\" Seite enthält einen Eintrag für jedes Gruppenmitglied in einer scrollbaren Liste",
                    "Jeder Eintrag besteht aus einem Bild, Vor- und Nachname, Semester, Studiengang, und der Universitätsmailadresse des Gruppenmitglieds"
                ],
                "Farbe": "Gelbe"
            }
        ]
    },
    "Sprint 2": {
        "Name": "Karte & Events",
        "Punkte Produkt": 15,
        "User Storys": [
            {
                "Name": "Eventliste",
                "Punktzahl": 2,
                "User Story": "Als User möchte ich eine Liste aller angebotenen Events ansehen können, damit ich einen Überblick über alle angebotenen Events bekomme.",
                "Akzeptanzkriterien": [
                    "Navigationsleiste enthält einen Button für \"Events\" Seite",
                    "Auf der \"Events\" Seite ist eine Liste aller angebotenen Events zu sehen",
                    "Jedes Listenelement in der Produktliste enthält Bild, Name, Startdatum, Enddatum und Preis des Produkts",
                    "Das Enddatum wird ausgeblendet, falls Startdatum und Enddatum übereinstimmen",
                    "Nicht mehr aktuelle Events werden nicht mehr in der Liste angezeigt (Events deren Enddatum nach dem aktuellen Datum liegt)",
                    "Für nicht angemeldete User ist die \"Events\" Seite nicht erreichbar (Weiterleitung auf \"Login\" Seite)"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Eventsuche",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich die angebotenen Events durchsuchen können, damit ich mein gesuchtes Event schneller finde.",
                "Akzeptanzkriterien": [
                    "\"Event\" Seite enthält ein Suchfeld mit Eingabefeld für den Suchbegriff",
                    "Die Suche wird gestartet, sobald der Suchbegriff eingegeben wird",
                    "Die Suche wird aktualisiert, wenn der Suchbegriff geändert wird",
                    "Nach jeder Eingabe/Änderung des Suchbegriffs werden in der Eventliste nur noch Events angezeigt die den vollständigen Suchbegriff im Namen enthalten",
                    "Zwischen Groß- und Kleinschreibung wird nicht unterschieden (z.B., der Suchbegriff \"brunch\" führt dazu, dass Einträge die \"Brunch\" enthalten angezeigt werden)",
                    "Wenn das Eingabefeld leer ist, werden alle Even"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Eventseite",
                "Punktzahl": 2,
                "User Story": "Als User möchte ich ein Event selektieren können, damit ich mehr Informationen über das Event erhalte.",
                "Akzeptanzkriterien": [
                    "Drückt der User auf ein Element in der Eventliste öffnet sich die Produktseite des Events",
                    "Die Produktseite enthält Bild, Name, Startdatum, Enddatum, Preis und Beschreibung des Produkts",
                    "Das Enddatum wird ausgeblendet, falls Startdatum und Enddatum übereinstimmen",
                    "Eine interaktive Karte zeigt den Ort des Events mittels eines Markers an",
                    "Über einen \"Zurück\" Button kann ein User auf die Eventliste zurückkehren"
                ],
                "Entwicklungshinweis": [
                    "HTML Beschreibung kann mittels dem [innerHTML] Attribut geladen werd"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Eventtickets buchen",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich ein Ticket zu einem Event bestellen können, damit ich an dem Event teilnehmen kann.",
                "Akzeptanzkriterien": [
                    "Eventseite enthält ein \"Ticket Buchen\" Button",
                    "Drückt User auf den \"Ticket Buchen\" Button wird er/sie auf die \"Bestellen\" Seite weitergeleitet",
                    "Die \"Bestellen\" Seite zeigt Name, Startdatum, Enddatum und Preis des Produkts an",
                    "Das Enddatum wird ausgeblendet, falls Startdatum und Enddatum übereinstimmen",
                    "Die \"Bestellen\" Seite hat Buttons für verschiedene Zahlungsanbieter, mit denen die Bestellung bezahlt werden kann: Zahlung via \"HciPal\", Zahlung via \"BachelorCard\", Zahlung via \"SwpSafe\" ",
                    "Drückt User auf einen Button für einen Zahlungsanbieter, so wird er/sie auf eine Seite zur Durchführung des Bezahlvorgangs weitergeleitet (siehe User Story \"Bezahlvorgang\")",
                    "Die \"Bestellen\" Seite hat einen \"Zurück\" Button mit dem der User auf die Eventseite zurückkehrt"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Bezahlvorgang",
                "Punktzahl": 4,
                "User Story": "Als User möchte ich meine Bestellung direkt bezahlen können, damit ich den Preis der Bestellung nicht manuell überweisen muss.",
                "Akzeptanzkriterien": [
                    "\"Bestellen\" Seite bietet eine Auswahl zwischen drei Zahlungsanbietern: Zahlung via \"HciPal\", Zahlung via \"BachelorCard\", Zahlung via \"SwpSafe\" (siehe User Story \"Eventtickets buchen\")",
                    "Bei Auswahl einer Zahlungsoption werden Eingabefelder für die benötigten Daten der Zahlungsoption angezeigt (siehe Figma Spezifikation)",
                    "Bei Eingabe der benötigten Daten wird direkt überprüft ob der Account (Accountname, Kreditkartennummer, SwpSafe Code) aus Deutschland kommt (um Bestellungen aus dem Ausland zu vermeiden) und User bekommt sofort Feedback ob die Zahlung mit dem Account erlaubt ist",
                    "Die Seite zur Durchführung des Bezahlvorgangs enthält einen \"Jetzt Kaufen\" und einen \"Abbrechen\" Button",
                    "Eine Bestellung wird mit Drücken auf den \"Jetzt Kaufen\" Button ausgeführt",
                    "Eine Bestellung kann nur ausgeführt werden wenn die Zahlungsoption mit den eingegebenen Daten validiert wurde",
                    "Sobald ein User die Bestellung abschließt (und die Zahlungsdaten valide sind) wird die Transaktion durchgeführt",
                    "Nach erfolgreicher Bestellung wird  der User auf die \"Ticketkauf erfolgreich\" Seite weitergeleitet",
                    "Drück ein User auf den \"Abbrechen\" Button, so wird die Bestellung abgebrochen"
                ],
                "Entwicklungshinweis": [
                    "Requests an die Zahlungsdienstleister können aus Sicherheitsgründen nur über das Backend erfolgen",
                    "Dokumentation: https://gitlab.inf.uni-konstanz.de/ag-hci/lectures/2023-software-projekt/swp-2023-beispiele/-/wikis/Zahlungssysteme"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Gekaufte Tickets",
                "Punktzahl": 2,
                "User Story": "Als User möchte ich meine gekauften Tickets ansehen können, damit ich weiß welche Event Tickets ich bereits gekauft habe.",
                "Akzeptanzkriterien": [
                    "Navigationsleiste enthält einen Button \"Meine Tickets\"",
                    "Drückt User auf den \"Meine Tickets\" Button wird User auf eine \"Meine Tickets\" Seite weitergeleitet",
                    "Für nicht angemeldete User ist die \"Meine Tickets\" Seite nicht erreichbar (Weiterleitung auf \"Login\" Seite)",
                    "Auf der \"Meine Tickets\" Seite ist eine Liste aller Event Tickets zu sehen, die der User bisher gekauft hat",
                    "Jedes Listenelement enthält Bild, Anzahl, Name, Startdatum, und Enddatum",
                    "Das Enddatum wird ausgeblendet, falls Startdatum und Enddatum übereinstimmen"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Attraktionen",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich den genauen Ort von Attraktionen sehen können, damit ich weiß wo sich die Attraktion befindet.",
                "Akzeptanzkriterien": [
                    "Navigationsleiste enthält einen Button \"Karte\"",
                    "Drückt User auf den \"Karte\" Button wird User auf eine \"Karten\" Seite weitergeleitet",
                    "\"Karten\" Seite zeigt interaktive Karte der Mainau",
                    "Für nicht angemeldete User ist die \"Karten\" Seite nicht erreichbar (Weiterleitung auf \"Login\" Seite)",
                    "\"Karten\" Seite enthält Marker für jede Attraktion der Mainau",
                    "Position des Markers basiert auf den Koordinaten der Attraktion"
                ],
                "Farbe": "Gelbe"
            },
            {
                "Name": "Attraktionenseite",
                "Punktzahl": 2,
                "User Story": "Als User möchte ich eine Attraktion selektieren können, damit ich mehr Informationen über die Attraktion erhalte.",
                "Akzeptanzkriterien": [
                    "Drücken auf einen Marker in der Karte öffnet die Detailseite der Attraktion",
                    "Die Detailseite der Attraktion enthält Bild, Name, und Beschreibung der Attraktion",
                    "Eine interaktive Karte zeigt den Ort der Attraktion mittels eines Markers an",
                    "Über einen \"Zurück\" Button kann User auf die Karte zurückkehre"
                ],
                "Farbe": "Gelbe"
            }
        ]
    },
    "Sprint 3": {
        "Name": "Erweiterungen",
        "Punkte Produkt": 10,
        "Punkte Software Engineering": 5,
        "User Storys": [
            {
                "Name": "Admin & Gärtner",
                "Punktzahl": 1,
                "User Story": "Als App-Betreiber brauchen wir verschiedene Nutzertypen für die Mitarbeiter*innen und Besucher*innen der Mainau.Diese Nutzertypen haben entsprechend ihrer Rolle Zugriff auf verschieden Funktionen. Zum Beispiel können Admins Events bearbeiten und Gärtner die Anfragen des Grünes Telefons beantworten.",
                "Akzeptanzkriterien": [
                    "Es existieren die Rollen \"Admin\", \"Gärtner\" und \"Besucher\"",
                    "Alle Rollen verwenden denselben Login",
                    "Beim Login wird erkannt, welcher Rolle die Email-Adresse angehört und der Nutzer bekommt nur die für seine Rolle relevanten Seiten angezeigt",
                    "Admins und Gärtner können keine Tickets erwerben, haben also keinen Zugriff auf die \"Ticket buchen\"- sowie \"Gekaufte Tickets\"-Seite",
                    "Die Navigationsleiste enthält die entsprechenden Seitenlinks für die Seiten, auf die die Rolle Zugriff hat",
                    "Admins können die Seiten: \"Karte\", \"Events\", \"Events hinzufügen\", \"Rollenverwaltung\" und \"Profil\" sehen",
                    "Gärtner können die Seiten \"Karte\", \"FAQ\", \"Chats\" und \"Profil\" sehen"
                ],
                "Farbe": "Türkise"
            },
            {
                "Name": "Admins/Gärtner verwalten",
                "Punktzahl": 3,
                "User Story": "Als App-Betreiber möchten wir bequem aus der App heraus neue Admin- und Gärtner-Konten erstellen und löschen können, um die Verwaltung einfacher zu machen",
                "Akzeptanzkriterien": [
                    "Es gibt einen \"Root\"-Admin-Account",
                    "Nur Admins können neue Admin- und Gärtner-Accounts erstellen und diese wieder entfernen",
                    "Der Root-Admin ist nicht löschbar, sodass immer ein Admin-Account zur Verfügung steht",
                    "Admins sehen eine \"Rollen verwalten\"-Seite, auf der sie neue Admins und Gärtner erstellen können und existierende Admins/Gärtner löschen können",
                    "Admin/Gärtner-Accounts werden angelegt mit Vorname, Nachname, Email und Passwort sowie ihrer Rolle",
                    "Admins und Gärtner können ihre Adresse selbst im Profil hinzufügen/bearbeiten, müssen dies aber nicht",
                    "Der Ersteller vergibt das initiale Passwort des neuen Admins/Gärtners, es kann aber vom neuen Admin/Gärtner in deren Profil geändert werden",
                    "Accounts können über eine Eingabemaske entsprechend der \"Registrieren\"-Seite erstellt werden",
                    "Admins sehen eine Liste aller existierenden Admin- und Gärtner-Accounts auf der \"Rollen verwalten\"-Seite",
                    "Klickt man auf den X-Button, wird ein Popup angezeigt, welches nachfragt, ob der Account gelöscht werden soll. Wird ja ausgewählt, wird der ausgewählte Account gelöscht.",
                    "Der Root-Admin kommt nicht in dieser Liste vor",
                    "Die Liste kann mithilfe einer Suchfunktion nach Namen durchsucht werden"
                ],
                "Farbe": "Türkise"
            },
            {
                "Name": "Events hinzufügen",
                "Punktzahl": 3.5,
                "User Story": "Als Admin möchte ich in der App direkt neue Events hinzufügen können, um mir die Pflege der App/Datenbank zu erleichtern",
                "Akzeptanzkriterien": [
                    "Die Hinzufügen-Funktion steht nur Admins zur Verfügung und ist für Besucher und Gärtner nicht sichtbar",
                    {
                        "gestrichen": true,
                        "text": "Ein Button \"Event hinzufügen\" auf der \"Events\"-Seite öffnet eine neue Seite mit Eingabemasken für ein neues Event"
                    },
                    "In der Mitte der Navigationsleiste gibt es einen Button, der die Seite \"Neues Event hinzufügen\" öffnet.",
                    "Die Eingabemaske enthält Inputfelder für Titel, Startdatum, Enddatum (beide über Kalender-Picker) und die Beschreibung als HTML.",
                    "Zusätzlich kann über einen browse-Button ein Bild hochgeladen werden.",
                    "Der Ort des Events kann über eine interaktive Karte ausgewählt werden (der ausgewählte Marker wird farbig hervorgehoben und der Name es Orts unter der Karte ausgegeben)",
                    "Hinzufügen eines neuen Events über Button fügt das Event in die Datenbank ein"
                ],
                "Farbe": "Türkise"
            },
            {
                "Name": "Events bearbeiten",
                "Punktzahl": 1,
                "Punktzahl Hinweis": "weniger Aufwand aufgrund von User Story \"Events hinzufügen\"",
                "User Story": "Als Admin möchte ich in der App direkt existierende Events bearbeiten können, um mir die Pflege der App/Datenbank zu erleichtern",
                "Akzeptanzkriterien": [
                    "Die Bearbeitungs-Features stehen nur Admins zur Verfügung und sind für Besucher und Gärtner nicht sichtbar",
                    {
                        "gestrichen": true,
                        "text": "Ein Button \"Event hinzufügen\" öffnet eine neue Seite mit Eingabemasken für ein neues Event "
                    },
                    "Admins können auf ein Event in der Liste klicken und werden wie andere Benutzer auf die Event-Detail-Seite weitergeleitet. Statt dem Ticket-Kaufen-Button wird hier ein Bearbeiten-Button angezeigt, der auf eine \"Event bearbeiten\" Seite führt.",
                    "Alternativ leitet ein Bearbeiten-Button neben jedem Event in der Liste direkt zur Seite weiter.",
                    "Die Seite ist bereits mit den existierenden Daten vorausgefüllt. Alle Daten können abgeändert werden (anderes Bild auswählen, anderes Start- und Enddatum etc.).",
                    "Die Location des Events wird auf einer kleinen Karte angezeigt, andere Locations können über die Karte ausgewählt werden.",
                    "Speichern der Änderung aktualisiert die Datenbank"
                ],
                "Farbe": "Türkise"
            },
            {
                "Name": "Grünes Telefon",
                "Punktzahl": 2.5,
                "User Story": "Als User möchte ich direkt aus der App heraus die Pflanzenberatung der Mainau (\"Grünes Telefon\") nutzen können, um Hinweise zu meinen Pflanzen-Problemen zu bekommen.",
                "Akzeptanzkriterien": [
                    "Es gibt eine \"Grünes Telefon\"-Seite",
                    "Die \"Grünes Telefon\"-Seite ist über die Navigationsleiste für Besucher und Gärtner erreichbar",
                    "Für nicht angemeldete Nutzer ist die Seite nicht sichtbar (Weiterleitung auf Login)",
                    "Die Seite enthält ein FAQ mit den häufigsten Fragen ",
                    "Das FAQ sowie die einzelnen Fragen können über Buttons aus-/eingeklappt werden",
                    "Für Besucher gibt es die Möglichkeit, eigene Fragen zu stellen. Dazu gibt es ein Formular bestehend aus Betreff, Fragetext, Dropdown-Menü für das Thema der Frage und einem Button, der die Frage abschickt.",
                    "Es gibt eine Seite, auf der ein Benutzer seine bereits gestellten Fragen sowie die erhaltenen Antworten auf der Seite anschauen kann",
                    "Chats zu gestellten Fragen werden nur als Betreff angezeigt, ein Benutzer kann auf diese klicken, um auf den zugehörigen Chat zu kommen",
                    "Ein Besucher kann keine Fragen von anderen Besuchern sehen",
                    "Die gestellten Fragen eines Nutzers sind anti-chronologisch nach Fragezeitpunkt aufgelistet (zuletzt gestellte Frage oben)",
                    "Ein visueller Indikator macht es für den Besucher direkt ersichtlich, ob eine Frage schon eine Antwort hat",
                    "Gärtner können offene Fragen beantworten (s. User-Story \"Fragen beantworten\") und das FAQ editieren (s. User-Story \"FAQ bearbeiten\")",
                    "Die Seite enthält alternativ auch noch die Email, die Telefonnummer und die Location auf der Insel (auf einer kleinen Karte) des Grünen Telefons"
                ],
                "Farbe": "Hellgrüne"
            },
            {
                "Name": "Grünes Telefon: Chat/Rückfragen",
                "Punktzahl": 1.5,
                "Punktzahl Hinweis": "(geringerer Aufwand wegen User Story \"Grünes Telefon\"). + 3 Punkte falls Nachrichten in \"Echtzeit\" verschickt werden, siehe Kundenanmerkung",
                "User Story": "Als User möchte ich auf die Antworten der Gärtner reagieren können, z.B. mit Rückfragen, falls vorhanden, oder auch, um den Gärtnern zu danken.",
                "Akzeptanzkriterien": [
                    "Jede gestellte Frage (eine Konversation, die durch das Stellen der initialen Frage über das Formular erzeugt wurde) ist als ein Chat implementiert",
                    "Ein Chat ist nur für den besitzenden Nutzer sichtbar sowie den Gärtner, der die initiale Frage zuerst beantwortet",
                    "Neue initiale Fragen sind weiterhin für alle Gärtner sichtbar",
                    "Im Chat können Nutzer und Gärtner beliebig viele Nachrichten in beliebiger Reihenfolge schreiben",
                    "Jede Nachricht ist mit der Uhrzeit versehen, an der sie verfasst wurde, die Nachrichten sind wie in bekannten Chat-Applikationen danach geordnet",
                    "Die Nachrichten sind visuell (durch unterschiedliche Farben und Alignments auf der Seite) aufgetrennt in Nachrichten von sich selbst und dem Chatpartner",
                    "Die Chats sind scrollable, sollten sie zu lange für eine Seite werden"
                ],
                "Farbe": "Hellgrüne"
            },
            {
                "Name": "Fragen beantworten",
                "Punktzahl": 2,
                "User Story": "Als Gärtner muss ich die Fragen der Besucher beantworten können, um ihnen mit ihren Problemen helfen zu können.",
                "Akzeptanzkriterien": [
                    "Gärtner bekommen auf der \"Grünes Telefon\"-Seite die noch offenen Fragen aller Besucher aufgelistet",
                    "Die Fragen werden chronologisch (älteste zuerst) angezeigt",
                    "Die Fragen können nach ihrem Thema gefiltert werden",
                    "Fragen können beantwortet werden indem sie angeklickt werden, was ein Textfeld dazu öffnet und einen Button, der die Antwort abschickt",
                    "Die geschickte Antwort wird dem Fragesteller auf seiner Ansicht der Seite angezeigt"
                ],
                "Farbe": "Hellgrüne"
            },
            {
                "Name": "FAQ bearbeiten",
                "Punktzahl": 1.5,
                "Punktzahl Hinweis": "Optional",
                "User Story": "Als Gärtner möchte ich das FAQ bearbeiten können (neue Fragen hinzufügen, Texte bearbeiten, alte Fragen entfernen), damit ich nicht immer dieselben Fragen beantworten muss (und die Besucher schneller Antworten auf typische Fragen bekommen können).",
                "Akzeptanzkriterien": [
                    "Ein Gärtner kann auf der \"Grünes Telefon\"-Seite das FAQ sehen und bearbeiten",
                    "Über einen Button können neue Fragen mit Antwort zum FAQ hinzugefügt werden",
                    "Antworten dürfen nicht leer sein",
                    "Existierende Fragen können über einen Button bearbeitet  - es öffnen sich Textfelder mit dem aktuellen Text - und gespeichert werden",
                    "Existierende Fragen können über einen Button aus dem FAQ entfernt werden"
                ],
                "Farbe": "Hellgrüne"
            },
            {
                "Name": "Mehrere Tickets für ein Event kaufen",
                "Punktzahl": 0.5,
                "User Story": "Als User möchte ich beliebig viele Tickets für ein Event auf einmal kaufen können. Ich möchte Tickets für ein Event nachkaufen können, für das ich bereits Tickets besitze.Des Weiteren möchte ich als User meine schon besuchten Events auf der Ticketseite einblenden können.",
                "Akzeptanzkriterien": [
                    "Die Detail-Seite eines Events enthält einen \"Tickets buchen\"-Button (nicht mehr \"1 Ticket kaufen\"), der auf die Ticket-Buchen-Seite weiterleitet",
                    "Auf der Ticket-Buchen-Seite kann über Buttons ausgewählt werden, wie viele Tickets benötigt werden",
                    "Die Ticket-Buchen- und Bezahlen-Seiten zeigen die Anzahl der gewählten Tickets und den entsprechenden Gesamtpreis an",
                    "Die Gekaufte-Tickets-Seite zeigt für ein gekauftes Event an, wie viele Tickets dafür gekauft wurden",
                    "Das Kaufen weiterer Tickets für ein bereits gekauftes Event addiert die Ticketanzahlen auf der Gekaufte-Tickets-Seite"
                ],
                "Farbe": "Hellgelbe"
            },
            {
                "Name": "Beliebige Ticketkategorien für Events",
                "Punktzahl": 3,
                "User Story": "Als Event-Anbieter (Mainau GmbH) möchten wir in der App verschiedene Ticketkategorien für jedes Event anbieten können, um an die Events angepasste Tickets verkaufen zu können.",
                "Akzeptanzkriterien": [
                    "Für ein Event kann ein Ticket in verschiedenen Kategorien gekauft werden",
                    "Eine Ticketkategorie besteht aus einem Namen und einem Preis",
                    "Die Ticketkategorien können vom Betreiber definiert werden -> Admins können beim Bearbeiten/Hinzufügen von Events beliebig Ticketkategorien erstellen",
                    "Jedes Event kann für sich eigene Kategorien haben, Kategorienamen sind beliebig (z.B. 'VIP', 'Stehplatz', 'Kind', 'Erwachsener', 'Gäste mit Behinderung' etc.)",
                    "Auf der Ticket-Buchen-Seite kann ausgewählt werden, welches Ticketkategorie benötigt wird.",
                    "Die Wahl der Ticketkategorie wird beim Bezahlvorgang angezeigt und der Preis entsprechend dargestellt.",
                    "Die Gekaufte-Tickets-Seite zeigt für jedes Event alle Kategorien mit Anzahl an, die für dieses Event gekauft wurden"
                ],
                "Farbe": "Hellgelbe"
            },
            {
                "Name": "Event Favouriten",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich, das ich bestimmte Events durch einen Stern markieren kann, die mich besonders interessieren. Bei Bedarf kann ich nur diese anzeigen lassen, um einen guten Überblick über meine Lieblingsevents zu behalten.",
                "Akzeptanzkriterien": [
                    "Jedes Event besitzt anfangs einen grauen Stern, der durch Anklicken gesetzt werden kann. Damit hat das Event den Typ \"Favorit\"",
                    {
                        "gestrichen": true,
                        "text": "Durch erneutes Klicken auf den Stern kann ein Event von der Liste der Favoriten entfernt werden"
                    },
                    "Wird der Stern erneut ausgewählt, erhält der Benutzer Feedback in Form eines Popups, in dem nachgefragt wird, ob das Event wirklich aus der Liste der Favouriten entfernt werden soll. Bei Bestätigung verschwindet das Event aus der angezeigten Liste.",
                    "Events vom Typ \"Favourit\" können ebenfalls gefiltert werden"
                ],
                "Farbe": "Lila"
            },
            {
                "Name": "Automatisches Testing via Gitlab CI/CD",
                "Punktzahl": 2,
                "User Story": "Als Quality Manager möchte ich, dass bei jeder gepushten Änderung des Source Code automatisiert überprüft wird, ob noch alles funktioniert, um schwere Fehler vorzubeugen.",
                "Akzeptanzkriterien": [
                    "Es existiert eine Pipeline auf Gitlab, die bei jedem Commit ausgeführt wird",
                    "Die Pipeline baut das ganze Projekt und führt alle spezifizierten Backend-Tests automatisch aus",
                    "Die Pipeline informiert den Entwickler darüber, wenn seine Änderungen die Tests nicht passieren"
                ],
                "Farbe": "Blau"
            },
            {
                "Name": "Abgelaufene Tickets",
                "Punktzahl": "-",
                "User Story": "Als Benutzer möchte ich mir meine abgelaufenen Tickets anschauen und bei Bedarf auch ausblenden können.",
                "Akzeptanzkriterien": [
                    "Tickets Seite enthält eine \"Abgelaufene Tickets anzeigen\" Checkbox",
                    "Abgelaufene Tickets werden dadurch ein und ausgeblendet",
                    "Abgelaufene Tickets sind ausgegraut und werden unterhalb der noch aktuellen Tickets angezeigt",
                    "Durch anklicken eines der abgelaufenen Tickets gelangt man ebenfalls zur Detailseite des jeweiligen Events, kann dort jedoch kein Ticket erwerben."
                ],
                "Farbe": "Rot"
            },
            {
                "Name": "Kategorisierung der Attraktionen",
                "Punktzahl": 1,
                "User Story": "Als User möchte ich auf der Karte sehen können, um was für einen Typ von Attraktion es sich bei einem Marker handelt. Außerdem würde ich gerne zwischen diesen Typen wechseln können und nur Attraktionen dieses Typs anschauen können.Das soll mir helfen, schneller die richtigen Locations auf der Insel zu finden.",
                "Akzeptanzkriterien": [
                    "Attraktionen sind entweder vom Typ \"Pflanzen\", \"Verpflegung\", \"Gebäude\" oder \"Sonstige\"",
                    "Auf der Karte gibt es ein Kontroll-Overlay, mit dem ausgewählt werden kann, welche Typen von Attraktionen angezeigt werden sollen",
                    "Es werden immer nur die Marker angezeigt, die zu Attraktionen der ausgewählten Typen korrespondieren",
                    "Attraktionen zu zwei Kategorien? (Anmerkung Kunde: Überbleibsel)"
                ],
                "gestrichen": true,
                "Farbe": "Rot"
            },
            {
                "Name": "Anzeige des Blumenjahrs",
                "Punktzahl": "-",
                "Punktzahl Hinweis": "Reject - Wenig bis kein Programmieraufwand.",
                "Anmerkung": "Implementierung als \"Blumenrad\"  via neuer User Story möglich, wird aber möglicherweise zu viel Aufwand (mit den bisherigen User Stories).",
                "User Story": "Als User möchte ich in der App sehen welche Pflanzen aktuell blühen und welche in anderen Monaten blühen (so wie auf der Mainau Website: https://www.mainau.de/de/blumenjahr.html)",
                "Akzeptanzkriterien": [
                    "Es gibt eine Blumenjahr Seite",
                    "Man kann sie entweder durch Navigationsleiste oder über die Einbettung des Grünen Telefons erreichen",
                    "Dort sieht man welche Pflanzen im aktuellen Monat blühen",
                    "Über einen Button kann man auf eine Übersicht gelangen, auf der alle Monaten aufgelistet sind",
                    "Wenn man auf einen Monat in der Jahresübersicht drückt kann man im Detail sehen was im ausgewählten Monat für Pflanzen blühe"
                ],
                "gestrichen": true,
                "Farbe": "Orange"
            },
            {
                "Name": "Event Empfehlung von Events",
                "Punktzahl": "-",
                "Punktzahl Hinweis": "0.5 (random) / 2 (ähnlichkeitsbasiert)",
                "User Story": "Als User möchte ich, das mir ähnliche Events zu meinem ausgewählten Event vorgeschlagen werden, die mir auch gefallen könnten.",
                "Akzeptanzkriterien": [
                    "Auf der jeder Eventseite werden bis zu 3 zufällige Events aus der selben Kategorie angezeigt",
                    "Nutzer*innen können die für sie vorgeschlagenen Events anklicken um weiter Informationen zu diesem Events zu erhalten oder diese zu buche"
                ],
                "gestrichen": true,
                "Farbe": "Lila"
            },
            {
                "Name": "Events filtern und Kategorien",
                "Punktzahl": "-",
                "Punktzahl Hinweis": "2 (\"einfache\" Filter) / 3 (\"komplexe\" Filter)",
                "User Story": "Als User möchte ich die Liste der Events nach bestimmten Kategorien filtern können, um so schneller einen Überblick über die Typen von Events zu erhalten, die mich interessieren.Dabei möchte ich nach verschiedenen Themen filtern und nach Preis oder Datum sortieren können.Zwischen den einzelnen Typen möchte ich wechseln und nur Events dieses Typs anschauen können.Das soll mir helfen, nur diese Events durchsuchen zu können, die mich interessieren.",
                "Akzeptanzkriterien": [
                    "Events sind entweder von der Kategorie \"Musik\", \"Essen\", \"Ausstellung\" oder \"Sonstige\"",
                    "Über Liste der Events gibt es einen Button \"Erweiterte Suche\"",
                    "Beim Anklicken fahren Auswahlfelder aus, in denen gewählt werden kann, nach was gefiltert werden soll und in welcher Sortierung die Events aufgelistet werden sollen",
                    "Die erweiterte Suche erlaubt das Filtern nach bestimmten Kategorien, Datum, Preis und Titel",
                    "Es ist möglich alle oder mehrere Kategorien gleichzeitig auszuwählen",
                    "Es werden immer nur die Events angezeigt, die den ausgewählten Suchkriterien entsprechen",
                    "Events können auf- oder absteigend nach Preis oder Datum sortiert werden",
                    "Standartmäßig werden alle Events angezeigt und diese nach Datum in sortiert, sodass die Events, die als nächstes anstehen, weiter oben aufgelistet sind"
                ],
                "Anmerkungen Kunde": [
                    "Bitte ergänzen falls komplexere Filter implementiert werden:",
                    "Bei Preis / Bewertung können mittels z.B. Rangeslider sowohl Minimum als auch Maximum gleichzeitig gesetzt werden",
                    "Es können mehrere Locations ausgewählt werden",
                    "Für Start- und Enddatum werden geeignete UI Komponenten verwendet",
                    "Aktive Filteroptionen werden angezeigt (z.B. “Preis: 100 - 200€; Ort: Location 1 oder Location 2; ”)",
                    "Aktive Filter können über Button einzeln entfernt werden"
                ],
                "gestrichen": true,
                "Farbe": "Lila"
            }
        ]
    },
    "Sprint 4": {
        "Name": "Verbesserungen & Testen",
        "Punkte (Produkt)": 10,
        "Punkte (Software Engineering)": 3,
        "User Storys": [
            {
                "Name": "Refactoring",
                "Punktzahl": "-",
                "Punktzahl Hinweis": "Basierend auf finaler Code Qualität",
                "Anforderung Software Projekt": "Das Refactoring des Codes wird normalerweise während des Entwicklungsprozesses immer wieder durchgeführt. Das Integrieren von neuen Funktionen erfordert immer wieder auch die Überarbeitung der Projektstruktur. Dadurch bleibt der Code verständlich, lesbar und erweiterbar. Das heißt zukünftige Funktionen können in der gleichen Geschwindigkeit integriert werden. Ansonsten würde die Integration neuer Funktionen immer langsamer werden. An dieser Stelle möchten wir Sie erinnern dass in diesem letzten Sprint ein guter Zeitpunkt ist die Projektstruktur zu überarbeiten da auch die Abgabe kurz danach bevorsteht.",
                "Akzeptanzkriterien": [
                    "Objektorientiere Programmierung",
                    "Verwendung von Software Design Patterns (bitte im Projekt Wiki erwähnen!)",
                    "Integration von Unit Tests (benötigt manchmal auch ein Refactoring da ansonsten Teile des Codes nicht getestet werden können)",
                    "Code ausreichend dokumentiert und \"einfach\" zu verstehen"
                ],
                "Für weitere Informationen": "Clean Code - Refactoring, Patterns, Testen und Techniken für sauberen Code (Robert C. Martin) https://learning.oreilly.com/library/view/clean-​code/9783826655487/",
                "Farbe": "Blau"
            },
            {
                "Name": "Testing",
                "Punktzahl": 3,
                "Anforderung Software Projekt": "Durch die Integration von Unit Tests können Komponenten eines Software Projekts automatisiert getestet werden. Dadurch kann direkt bei der Implementierung überprüft werden ob der geschriebene Code auch wie vorgesehen (das heißt auch für alle möglichen Sonderfälle) funktioniert. Außerdem kann im weiteren Verlauf des Projekts jederzeit überprüft werden ob bereits existierende Komponenten des Projekts weiterhin ordnungsgemäß funktionieren. Die Implementierung neuer Funktionen kann dazu führen, dass bereits existierende Komponenten nicht mehr ordnungsgemäß funktionieren. Durch das Ausführen von Tests werden neue Fehler frühzeitig entdeckt.Normalerweise wird in Scrum in der \"Definition of Done\" festgelegt welche Funktionen getestet werden müssen bevor sie als erledigt (Done) gelten (Zum Beispiel Backend Funktionen/API Endpoints). In dieser Lehrveranstaltung führen wir Tests erst spät ein und erwarten daher auch nicht dass der gesamte Code getestet wird.",
                "Akzeptanzkriterien": [
                    "Eine Backend Komponente des Projekt wird vollständig getestet (z.B. Authentication & Authorization)",
                    "Keine Frontend Tests",
                    "Bonuspunkte falls die Tests automatisch via einer \"Continuous Integration\" Pipeline durchgeführt werden (d.h. die Tests werden automatisch auf GitLab ausgeführt - ein GitLab Runner kann zur Verfügung gestellt werden)Siehe Video zu Unit Testin"
                ],
                "Farbe": "Blau"
            }
        ]
    }
}